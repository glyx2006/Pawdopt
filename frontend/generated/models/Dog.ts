/* tslint:disable */
/* eslint-disable */
/**
 * Pawdopt api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DogShelter } from './DogShelter';
import {
    DogShelterFromJSON,
    DogShelterFromJSONTyped,
    DogShelterToJSON,
    DogShelterToJSONTyped,
} from './DogShelter';

/**
 * Detailed dog profile
 * @export
 * @interface Dog
 */
export interface Dog {
    /**
     * 
     * @type {string}
     * @memberof Dog
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Dog
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof Dog
     */
    age: number;
    /**
     * 
     * @type {string}
     * @memberof Dog
     */
    breed: string;
    /**
     * 
     * @type {string}
     * @memberof Dog
     */
    gender: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof Dog
     */
    photoKeys: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof Dog
     */
    description: string;
    /**
     * 
     * @type {DogShelter}
     * @memberof Dog
     */
    shelter: DogShelter;
    /**
     * 
     * @type {Date}
     * @memberof Dog
     */
    createdAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof Dog
     */
    status: DogStatusEnum;
}


/**
 * @export
 */
export const DogStatusEnum = {
    Available: 'available',
    Pending: 'pending',
    Adopted: 'adopted'
} as const;
export type DogStatusEnum = typeof DogStatusEnum[keyof typeof DogStatusEnum];


/**
 * Check if a given object implements the Dog interface.
 */
export function instanceOfDog(value: object): value is Dog {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('age' in value) || value['age'] === undefined) return false;
    if (!('breed' in value) || value['breed'] === undefined) return false;
    if (!('gender' in value) || value['gender'] === undefined) return false;
    if (!('photoKeys' in value) || value['photoKeys'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('shelter' in value) || value['shelter'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function DogFromJSON(json: any): Dog {
    return DogFromJSONTyped(json, false);
}

export function DogFromJSONTyped(json: any, ignoreDiscriminator: boolean): Dog {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'age': json['age'],
        'breed': json['breed'],
        'gender': json['gender'],
        'photoKeys': json['photoKeys'],
        'description': json['description'],
        'shelter': DogShelterFromJSON(json['shelter']),
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'status': json['status'],
    };
}

export function DogToJSON(json: any): Dog {
    return DogToJSONTyped(json, false);
}

export function DogToJSONTyped(value?: Dog | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'age': value['age'],
        'breed': value['breed'],
        'gender': value['gender'],
        'photoKeys': value['photoKeys'],
        'description': value['description'],
        'shelter': DogShelterToJSON(value['shelter']),
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'status': value['status'],
    };
}

